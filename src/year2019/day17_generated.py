from goto import with_goto
from lib.intcode import *
from lib.intcode_decompile import *

class DecompiledProgram(DecompiledProgramBase):

    video_feed = 1

    @with_goto
    def func0(self):
        # This instruction may get modified
        self.mem[332] = self.mem[330] * self.mem[331]
        self.mem[16] = 1182
        self.mem[24] = 1481
        label .lbl_14
        tmp = self.mem[self.mem[16]]
        label .lbl_18
        if not tmp:
            goto .lbl_36
        self.mem[self.mem[24]] = self.mem[571]
        tmp -= 1
        self.mem[24] += 1
        pass # 1
        goto .lbl_18
        label .lbl_36
        self.mem[571] = int(self.mem[571] == 0)
        self.mem[16] += 1
        tmp = int(self.mem[16] == 1481)
        if not tmp:
            goto .lbl_14
        q0 = self.show_map()
        if not self.mem[332]:
            goto .lbl_62
        raise MachineHaltedException()
        label .lbl_62
        q0 = 333
        q0 = self.output_string(q0)
        self.mem[572] = 0
        self.mem[573] = 0
        label .lbl_81
        self.mem[574] = self.input()
        self.mem[573] += 1
        tmp = int(self.mem[574] < 65)
        if tmp:
            goto .lbl_151
        tmp = int(67 < self.mem[574])
        if tmp:
            goto .lbl_151
        self.mem[574] -= 64
        self.mem[574] = -self.mem[574]
        self.mem[572] += 1
        tmp = int(self.mem[572] < 11)
        if not tmp:
            goto .lbl_165
        self.mem[127] = 1182 + self.mem[572]
        self.mem[self.mem[127]] = self.mem[574]
        self.mem[574] = self.input()
        self.mem[573] += 1
        tmp = int(self.mem[574] == 10)
        if tmp:
            goto .lbl_189
        tmp = int(self.mem[574] == 44)
        if not tmp:
            goto .lbl_158
        pass # 1
        goto .lbl_81
        label .lbl_151
        q0 = 340
        pass # 1
        goto .lbl_177
        label .lbl_158
        q0 = 477
        pass # 1
        goto .lbl_177
        label .lbl_165
        q0 = 514
        q0 = self.output_string(q0)
        raise MachineHaltedException()
        label .lbl_177
        q0 = self.output_string(q0)
        self.output(self.mem[574])
        self.output(10)
        raise MachineHaltedException()
        label .lbl_189
        tmp = int(self.mem[573] < 22)
        if not tmp:
            goto .lbl_165
        self.mem[1182] = self.mem[572]
        self.output_string(375)  # Function A
        self.input_string(1193)
        self.output_string(388)  # Function B
        self.input_string(1204)
        self.output_string(401)  # Function C
        self.input_string(1215)
        self.output_string(414)  # Continuous video feed?
        self.video_feed = self.input()
        self.video_feed = int(self.video_feed == 89 or self.video_feed == 121)  # y or Y
        while True:
            if self.input() == 10:
                break
        self.output(10)
        self.func622(1182)
        if not self.video_feed:
            self.video_feed = 1
            self.show_map()
        self.output(self.mem[438])
        raise MachineHaltedException()

    #  330: DB 0, 1, 1, 6, 77, 97, 105, 110, 58, 10, 33               ....Main:.!
    #  341: DB 10, 69, 120, 112, 101, 99, 116, 101, 100, 32, 102      .Expected f
    #  352: DB 117, 110, 99, 116, 105, 111, 110, 32, 110, 97, 109     unction nam
    #  363: DB 101, 32, 98, 117, 116, 32, 103, 111, 116, 58, 32       e but got:
    #  374: DB 0, 12, 70, 117, 110, 99, 116, 105, 111, 110, 32        ..Function
    #  385: DB 65, 58, 10, 12, 70, 117, 110, 99, 116, 105, 111        A:..Functio
    #  396: DB 110, 32, 66, 58, 10, 12, 70, 117, 110, 99, 116         n B:..Funct
    #  407: DB 105, 111, 110, 32, 67, 58, 10, 23, 67, 111, 110        ion C:..Con
    #  418: DB 116, 105, 110, 117, 111, 117, 115, 32, 118, 105, 100   tinuous vid
    #  429: DB 101, 111, 32, 102, 101, 101, 100, 63, 10, 0, 37        eo feed?..%
    #  440: DB 10, 69, 120, 112, 101, 99, 116, 101, 100, 32, 82       .Expected R
    #  451: DB 44, 32, 76, 44, 32, 111, 114, 32, 100, 105, 115        , L, or dis
    #  462: DB 116, 97, 110, 99, 101, 32, 98, 117, 116, 32, 103       tance but g
    #  473: DB 111, 116, 58, 32, 36, 10, 69, 120, 112, 101, 99        ot: $.Expec
    #  484: DB 116, 101, 100, 32, 99, 111, 109, 109, 97, 32, 111      ted comma o
    #  495: DB 114, 32, 110, 101, 119, 108, 105, 110, 101, 32, 98     r newline b
    #  506: DB 117, 116, 32, 103, 111, 116, 58, 32, 43, 10, 68        ut got: +.D
    #  517: DB 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 32   efinitions
    #  528: DB 109, 97, 121, 32, 98, 101, 32, 97, 116, 32, 109        may be at m
    #  539: DB 111, 115, 116, 32, 50, 48, 32, 99, 104, 97, 114        ost 20 char
    #  550: DB 97, 99, 116, 101, 114, 115, 33, 10, 94, 62, 118        acters!.^>v
    #  561: DB 60, 0, 1, 0, -1, -1, 0, 1, 0, 0, 0                     <..........
    #  572: DB 0, 0, 0, 1, 28, 0, 0

    @with_goto
    def output_string(self, p0):
        p2 = self.mem[p0]
        p0 += 1
        p1 = 0
        while p1 != p2:
            self.output(self.mem[p0 + p1])
            p1 += 1
        return p0

    @with_goto
    def func622(self, p0=0, p1=0, p2=0, p3=0):
        self.mem[630] = p0
        p2 = self.mem[self.mem[630]]
        p0 += 1
        p1 = 0
        label .lbl_640
        tmp = int(p1 == p2)
        if tmp:
            goto .lbl_781
        self.mem[652] = p0 + p1
        p3 = self.mem[self.mem[652]]
        tmp = int(p3 == -4)
        if tmp:
            goto .lbl_709
        tmp = int(p3 == -5)
        if tmp:
            goto .lbl_734
        tmp = int(p3 < 0)
        if tmp:
            goto .lbl_759
        label .lbl_676
        if not p3:
            goto .lbl_774
        self.mem[684] = self.mem[578] + 562
        self.mem[576] += self.mem[self.mem[684]]
        self.mem[692] = self.mem[578] + 566
        self.mem[577] += self.mem[self.mem[692]]
        q0 = self.show_map()
        p3 -= 1
        pass # 1
        goto .lbl_676
        label .lbl_709
        self.mem[578] += 1
        tmp = int(self.mem[578] == 4)
        if not tmp:
            goto .lbl_724
        self.mem[578] -= 4
        label .lbl_724
        q0 = self.show_map()
        pass # 1
        goto .lbl_774
        label .lbl_734
        self.mem[578] -= 1
        tmp = int(self.mem[578] == -1)
        if not tmp:
            goto .lbl_749
        self.mem[578] += 4
        label .lbl_749
        q0 = self.show_map()
        pass # 1
        goto .lbl_774
        label .lbl_759
        q0 = p3 * -11
        q0 += 1182
        q0 = self.func622(q0)
        label .lbl_774
        p1 += 1
        pass # 1
        goto .lbl_640
        label .lbl_781
        pass # 0
        return p0

    @with_goto
    def show_map(self):
        if self.video_feed:
            goto .lbl_802
        p0 = self.mem[576]  # x
        p1 = self.mem[577]  # y
        goto .lbl_814
        label .lbl_802
        p5 = 0
        p1 = 0
        label .new_line
        p0 = 0
        label .lbl_814
        p4 = int(p0 == self.mem[576]) * int(p1 == self.mem[577])
        p3 = p1 * 37 + p0 + 1481
        if not self.mem[p3]:
            p2 = p4 * 42 + 46
            if p4:
                p5 = 1
        else:
            if not p4:
                p2 = 35
            else:
                if self.mem[p3] == 1:
                    self.mem[374] += 1
                    self.mem[p3] = 2
                    self.mem[902] = p3
                    self.mem[438] += self.mem[902] + p0 * p1 + self.mem[374]
                p2 = self.mem[self.mem[578] + 558]

        if self.video_feed:
            self.output(p2)
            p0 += 1
            if p0 != 37:
                goto .lbl_814
            self.output(10)
            p1 += 1
            if p1 != 43:
                goto .new_line
            self.output(10)
            if p5:
                raise MachineHaltedException()
        if p5:
            self.video_feed = 1
            q0 = self.show_map()
            raise MachineHaltedException()

        return p0

    @with_goto
    def input_string(self, p0=0, p1=0, p2=0, p3=0, p4=0):
        p1 = 0
        p2 = 0  # num characters read
        label .lbl_989
        p3 = self.input()  # p3 last character
        p2 += 1
        if p3 == 82: # R
            goto .lbl_1030
        if p3 == 76:  # L
            goto .lbl_1037
        p4 = int(p3 < 48)  # symbol
        if p4:
            goto .lbl_1124
        p4 = int(57 < p3)  # not a digit
        if p4:
            goto .lbl_1124
        p3 -= 48           # digit
        pass # 1
        goto .lbl_1041
        label .lbl_1030  # Got R
        p3 = -4
        pass # 1
        goto .lbl_1041
        label .lbl_1037  # Got L
        p3 = -5
        label .lbl_1041  # Got L or R
        p1 += 1
        p4 = int(p1 < 11)
        if not p4:
            goto .lbl_1138
        self.mem[1059] = p0 + p1
        self.mem[self.mem[1059]] = p3
        label .lbl_1060
        p3 = self.input()
        p2 += 1
        p4 = int(p3 < 48)
        if p4:
            goto .lbl_1107
        p4 = int(57 < p3)
        if p4:
            goto .lbl_1107
        p3 -= 48
        p4 = 10 * self.mem[p0 + p1]
        p3 += p4
        self.mem[p0 + p1] = p3
        goto .lbl_1060
        label .lbl_1107
        p4 = int(p3 == 10)
        if p4:
            goto .lbl_1162
        p4 = int(p3 == 44)
        if not p4:
            goto .lbl_1131
        goto .lbl_989
        label .lbl_1124
        q0 = 439
        goto .lbl_1150
        label .lbl_1131
        q0 = 477
        goto .lbl_1150
        label .lbl_1138
        q0 = 514
        q0 = self.output_string(q0)
        raise MachineHaltedException()
        label .lbl_1150
        self.output_string(q0)  # bad input
        self.output(p3)
        self.output(10)
        raise MachineHaltedException()
        label .lbl_1162
        p4 = int(p2 < 22)
        if not p4:
            goto .lbl_1138
        self.mem[1176] = p0
        self.mem[self.mem[1176]] = p1
        return p0

    # 1182: DB 28, 9, 36, 1, 36, 1, 36, 1, 36, 1, 36                  ..$.$.$.$.$
    # 1193: DB 1, 26, 9, 1, 1, 26, 1, 7, 1, 1, 1                      ...........
    # 1204: DB 22, 11, 1, 1, 1, 1, 22, 1, 3, 1, 5                     ...........
    # 1215: DB 1, 1, 1, 1, 1, 2, 13, 7, 1, 3, 11                      ...........
    # 1226: DB 2, 1, 11, 1, 7, 1, 9, 1, 1, 1, 4                       ...........
    # 1237: DB 1, 11, 1, 7, 1, 9, 1, 1, 1, 4, 1                       ...........
    # 1248: DB 11, 1, 7, 1, 9, 1, 1, 1, 4, 1, 5                       ...........
    # 1259: DB 13, 1, 1, 9, 1, 1, 1, 4, 1, 5, 1                       ...........
    # 1270: DB 5, 1, 5, 1, 1, 1, 9, 1, 1, 1, 2                        ...........
    # 1281: DB 11, 3, 1, 5, 1, 1, 13, 2, 1, 1, 1                      ...........
    # 1292: DB 5, 1, 1, 1, 3, 1, 5, 1, 11, 1, 4                       ...........
    # 1303: DB 1, 1, 1, 5, 1, 1, 1, 3, 1, 5, 13                       ...........
    # 1314: DB 4, 1, 1, 1, 5, 1, 1, 1, 3, 1, 22                       ...........
    # 1325: DB 1, 1, 9, 3, 1, 15, 1, 6, 1, 7, 1                       ...........
    # 1336: DB 5, 1, 15, 1, 6, 1, 7, 1, 1, 5, 15                      ...........
    # 1347: DB 1, 6, 1, 7, 1, 1, 1, 19, 1, 6, 1                       ...........
    # 1358: DB 7, 1, 1, 1, 19, 1, 6, 1, 7, 1, 1                       ...........
    # 1369: DB 1, 19, 1, 6, 9, 1, 1, 19, 1, 16, 1                     ...........
    # 1380: DB 19, 1, 12, 13, 11, 1, 12, 1, 3, 1, 7                   ...........
    # 1391: DB 1, 11, 1, 12, 1, 3, 1, 7, 1, 11, 1                     ...........
    # 1402: DB 12, 1, 3, 1, 7, 1, 11, 1, 12, 1, 3                     ...........
    # 1413: DB 1, 1, 5, 1, 13, 12, 1, 3, 1, 1, 1                      ...........
    # 1424: DB 3, 1, 26, 1, 3, 13, 20, 1, 5, 1, 3                     ...........
    # 1435: DB 1, 5, 1, 20, 1, 5, 1, 3, 1, 5, 1                       ...........
    # 1446: DB 20, 1, 5, 1, 3, 1, 5, 1, 20, 1, 5                      ...........
    # 1457: DB 1, 3, 1, 5, 1, 20, 1, 5, 1, 3, 1                       ...........
    # 1468: DB 5, 1, 20, 11, 5, 1, 26, 1, 9, 1, 26                    ...........
    # 1479: DB 11
    funcs = {
      0: func0, 579: output_string, 622: func622, 786: show_map, 979: input_string
    }

    code = [
        2,330,331,332,109,3072,1101,1182,0,16,1101,1481,0,24,102,1,             # ....m.........f.
        0,570,1006,570,36,1002,571,1,0,1001,570,-1,570,1001,24,1,               # ....$...........
        24,1105,1,18,1008,571,0,571,1001,16,1,16,1008,16,1481,570,              # ................
        1006,570,14,21101,0,58,0,1105,1,786,1006,332,62,99,21101,333,           # .....:......>c..
        0,1,21102,1,73,0,1105,1,579,1102,1,0,572,1101,0,0,                      # ....I...........
        573,3,574,101,1,573,573,1007,574,65,570,1005,570,151,107,67,            # ...e.....A....kC
        574,570,1005,570,151,1001,574,-64,574,1002,574,-1,574,1001,572,1,       # ................
        572,1007,572,11,570,1006,570,165,101,1182,572,127,101,0,574,0,          # ........e...e...
        3,574,101,1,573,573,1008,574,10,570,1005,570,189,1008,574,44,           # ..e............,
        570,1006,570,158,1106,0,81,21102,1,340,1,1105,1,177,21101,0,            # ......Q.........
        477,1,1105,1,177,21102,1,514,1,21102,1,176,0,1105,1,579,                # ................
        99,21101,0,184,0,1105,1,579,4,574,104,10,99,1007,573,22,                # c.........h.c...
        570,1006,570,165,1002,572,1,1182,21101,0,375,1,21101,211,0,0,           # ................
        1105,1,579,21101,1182,11,1,21102,222,1,0,1106,0,979,21102,1,            # ................
        388,1,21102,1,233,0,1106,0,579,21101,1182,22,1,21101,0,244,             # ................
        0,1106,0,979,21102,401,1,1,21102,1,255,0,1105,1,579,21101,              # ................
        1182,33,1,21101,266,0,0,1106,0,979,21101,414,0,1,21102,277,             # .!..............
        1,0,1105,1,579,3,575,1008,575,89,570,1008,575,121,575,1,                # .........Y...y..
        575,570,575,3,574,1008,574,10,570,1006,570,291,104,10,21102,1182,       # ............h...
        1,1,21102,313,1,0,1105,1,622,1005,575,327,1101,1,0,575,                 # ................
        21101,0,327,0,1105,1,786,4,438,99,0,1,1,6,77,97,                        # .........c....Ma
        105,110,58,10,33,10,69,120,112,101,99,116,101,100,32,102,               # in:.!.Expected f
        117,110,99,116,105,111,110,32,110,97,109,101,32,98,117,116,             # unction name but
        32,103,111,116,58,32,0,12,70,117,110,99,116,105,111,110,                #  got: ..Function
        32,65,58,10,12,70,117,110,99,116,105,111,110,32,66,58,                  #  A:..Function B:
        10,12,70,117,110,99,116,105,111,110,32,67,58,10,23,67,                  # ..Function C:..C
        111,110,116,105,110,117,111,117,115,32,118,105,100,101,111,32,          # ontinuous video
        102,101,101,100,63,10,0,37,10,69,120,112,101,99,116,101,                # feed?..%.Expecte
        100,32,82,44,32,76,44,32,111,114,32,100,105,115,116,97,                 # d R, L, or dista
        110,99,101,32,98,117,116,32,103,111,116,58,32,36,10,69,                 # nce but got: $.E
        120,112,101,99,116,101,100,32,99,111,109,109,97,32,111,114,             # xpected comma or
        32,110,101,119,108,105,110,101,32,98,117,116,32,103,111,116,            #  newline but got
        58,32,43,10,68,101,102,105,110,105,116,105,111,110,115,32,              # : +.Definitions
        109,97,121,32,98,101,32,97,116,32,109,111,115,116,32,50,                # may be at most 2
        48,32,99,104,97,114,97,99,116,101,114,115,33,10,94,62,                  # 0 characters!.^>
        118,60,0,1,0,-1,-1,0,1,0,0,0,0,0,0,1,                                   # v<..............
        28,0,0,109,4,1202,-3,1,587,20101,0,0,-1,22101,1,-3,                     # ...m............
        -3,21101,0,0,-2,2208,-2,-1,570,1005,570,617,2201,-3,-2,609,             # ................
        4,0,21201,-2,1,-2,1106,0,597,109,-4,2106,0,0,109,5,                     # .........m....m.
        1202,-4,1,630,20102,1,0,-2,22101,1,-4,-4,21102,0,1,-3,                  # ................
        2208,-3,-2,570,1005,570,781,2201,-4,-3,652,21001,0,0,-1,1208,           # ................
        -1,-4,570,1005,570,709,1208,-1,-5,570,1005,570,734,1207,-1,0,           # ................
        570,1005,570,759,1206,-1,774,1001,578,562,684,1,0,576,576,1001,         # ................
        578,566,692,1,0,577,577,21101,0,702,0,1105,1,786,21201,-1,              # ................
        -1,-1,1106,0,676,1001,578,1,578,1008,578,4,570,1006,570,724,            # ................
        1001,578,-4,578,21102,731,1,0,1105,1,786,1106,0,774,1001,578,           # ................
        -1,578,1008,578,-1,570,1006,570,749,1001,578,4,578,21102,1,756,         # ................
        0,1105,1,786,1106,0,774,21202,-1,-11,1,22101,1182,1,1,21101,            # ................
        0,774,0,1106,0,622,21201,-3,1,-3,1106,0,640,109,-5,2106,                # .............m..
        0,0,109,7,1005,575,802,20102,1,576,-6,20102,1,577,-5,1105,              # ..m.............
        1,814,21101,0,0,-1,21101,0,0,-5,21101,0,0,-6,20208,-6,                  # ................
        576,-2,208,-5,577,570,22002,570,-2,-2,21202,-5,37,-3,22201,-6,          # ............%...
        -3,-3,22101,1481,-3,-3,1201,-3,0,843,1005,0,863,21202,-2,42,            # ...............*
        -4,22101,46,-4,-4,1206,-2,924,21101,1,0,-1,1106,0,924,1205,             # ................
        -2,873,21102,1,35,-4,1106,0,924,1201,-3,0,878,1008,0,1,                 # ....#...........
        570,1006,570,916,1001,374,1,374,2101,0,-3,895,1102,2,1,0,               # ................
        2102,1,-3,902,1001,438,0,438,2202,-6,-5,570,1,570,374,570,              # ................
        1,570,438,438,1001,578,558,921,21002,0,1,-4,1006,575,959,204,           # ................
        -4,22101,1,-6,-6,1208,-6,37,570,1006,570,814,104,10,22101,1,            # .......%....h...
        -5,-5,1208,-5,43,570,1006,570,810,104,10,1206,-1,974,99,1206,           # ....+....h....c.
        -1,974,1101,0,1,575,21101,0,973,0,1106,0,786,99,109,-7,                 # .............cm.
        2105,1,0,109,6,21101,0,0,-4,21101,0,0,-3,203,-2,22101,                  # ...m............
        1,-3,-3,21208,-2,82,-1,1205,-1,1030,21208,-2,76,-1,1205,-1,             # .....R......L...
        1037,21207,-2,48,-1,1205,-1,1124,22107,57,-2,-1,1205,-1,1124,21201,     # ...0.....9......
        -2,-48,-2,1105,1,1041,21102,-4,1,-2,1105,1,1041,21101,-5,0,             # ................
        -2,21201,-4,1,-4,21207,-4,11,-1,1206,-1,1138,2201,-5,-4,1059,           # ................
        1201,-2,0,0,203,-2,22101,1,-3,-3,21207,-2,48,-1,1205,-1,                # ............0...
        1107,22107,57,-2,-1,1205,-1,1107,21201,-2,-48,-2,2201,-5,-4,1090,       # ..9.............
        20102,10,0,-1,22201,-2,-1,-2,2201,-5,-4,1103,1201,-2,0,0,               # ................
        1106,0,1060,21208,-2,10,-1,1205,-1,1162,21208,-2,44,-1,1206,-1,         # ............,...
        1131,1105,1,989,21101,439,0,1,1105,1,1150,21102,1,477,1,1106,           # ................
        0,1150,21101,514,0,1,21101,0,1149,0,1105,1,579,99,21101,1157,           # .............c..
        0,0,1105,1,579,204,-2,104,10,99,21207,-3,22,-1,1206,-1,                 # .......h.c......
        1138,1201,-5,0,1176,2101,0,-4,0,109,-6,2106,0,0,28,9,                   # .........m......
        36,1,36,1,36,1,36,1,36,1,26,9,1,1,26,1,                                 # $.$.$.$.$.......
        7,1,1,1,22,11,1,1,1,1,22,1,3,1,5,1,                                     # ................
        1,1,1,1,2,13,7,1,3,11,2,1,11,1,7,1,                                     # ................
        9,1,1,1,4,1,11,1,7,1,9,1,1,1,4,1,                                       # ................
        11,1,7,1,9,1,1,1,4,1,5,13,1,1,9,1,                                      # ................
        1,1,4,1,5,1,5,1,5,1,1,1,9,1,1,1,                                        # ................
        2,11,3,1,5,1,1,13,2,1,1,1,5,1,1,1,                                      # ................
        3,1,5,1,11,1,4,1,1,1,5,1,1,1,3,1,                                       # ................
        5,13,4,1,1,1,5,1,1,1,3,1,22,1,1,9,                                      # ................
        3,1,15,1,6,1,7,1,5,1,15,1,6,1,7,1,                                      # ................
        1,5,15,1,6,1,7,1,1,1,19,1,6,1,7,1,                                      # ................
        1,1,19,1,6,1,7,1,1,1,19,1,6,9,1,1,                                      # ................
        19,1,16,1,19,1,12,13,11,1,12,1,3,1,7,1,                                 # ................
        11,1,12,1,3,1,7,1,11,1,12,1,3,1,7,1,                                    # ................
        11,1,12,1,3,1,1,5,1,13,12,1,3,1,1,1,                                    # ................
        3,1,26,1,3,13,20,1,5,1,3,1,5,1,20,1,                                    # ................
        5,1,3,1,5,1,20,1,5,1,3,1,5,1,20,1,                                      # ................
        5,1,3,1,5,1,20,1,5,1,3,1,5,1,20,11,                                     # ................
        5,1,26,1,9,1,26,11,14,                                                  # .........
    ]


if __name__ == "__main__":
      prog = DecompiledProgram()
      prog.init_io()
      prog.run_until_halted()
